cmake_minimum_required(VERSION 3.7)
set(PROJECT_NAME LogoMaker)
project(${PROJECT_NAME})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -static")
set(CMAKE_CXX_STANDARD 14)
set(SOURCE_FILES main.cpp EventHandler.h GuiComponent.h States.h States.cpp GuiComponentAdapter.h GuiComponentAdapter.cpp History.h KeyboardShortcuts.h KeyboardShortcuts.cpp Snapshot.h SnapshotInterface.h MouseEvents.h MouseEvents.cpp History.cpp Fonts.cpp Fonts.h FontNames.h Item.cpp Item.h ItemList.cpp ItemList.h Menu.h Menu.cpp MenuBar.cpp MenuBar.h InputBox.cpp InputBox.h DropMenu.cpp DropMenu.h Letter.cpp Letter.h MultiText.cpp MultiText.h TextBox.cpp TextBox.h TextCursor.cpp TextCursor.h Typing.h Typing.cpp TextLabel.cpp TextLabel.h TextInput.h TextInput.cpp ColorBox.h ColorBox.cpp ColorList.h ColorList.cpp ColorMenu.cpp ColorMenu.h ColorPicker.cpp ColorPicker.h ColorRGB.h ColorRGB.cpp LogoMaker.cpp LogoMaker.h ShadowDrop.cpp ShadowDrop.h Slider.cpp Slider.h SliderLabel.cpp SliderLabel.h FilenameBox.cpp FilenameBox.h FilenameTyper.cpp FilenameTyper.h FilenameWindow.h FilenameWindow.cpp)
if (CMAKE_BUILD_TYPE STREQUAL "Release")
    add_executable(${PROJECT_NAME} WIN32 ${SOURCE_FILES})
else ()
    add_executable(${PROJECT_NAME} ${SOURCE_FILES})
endif ()
set(SFML_ROOT C:/SFML-2.5.1)
set(SFML_STATIC_LIBRARIES TRUE)
set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake_modules")
#set(SFML_DIR C:/SFML/SFML-2.5.1/lib/cmake/SFML)
find_package(SFML  REQUIRED COMPONENTS audio graphics window system)
if (SFML_FOUND)
    include_directories(${SFML_INCLUDE_DIR})
    target_link_libraries(${PROJECT_NAME} ${SFML_LIBRARIES}
            ${SFML_DEPENDENCIES})
endif ()
